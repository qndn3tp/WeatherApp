# 이 워크플로우의 이름
name: Weather App Build

# 언제 실행할지 정하기
on:
  push:
    branches: [ main ]

# 할 일들
jobs:
  build:
    runs-on: macos-latest
    
    steps:
    # 1단계: 코드 다운로드
    - name: 📥 코드 다운로드하기
      uses: actions/checkout@v4
      
    # 2단계: Xcode 및 시뮬레이터 확인
    - name: ⚙️ Xcode 및 시뮬레이터 확인
      run: |
        echo "=== Xcode 버전 ==="
        xcodebuild -version
        echo ""
        
        echo "=== 사용 가능한 모든 시뮬레이터 ==="
        xcrun simctl list devices available
        echo ""
        
        echo "=== iPhone 시뮬레이터만 찾기 ==="
        xcrun simctl list devices available | grep -E "iPhone.*(.*)"
        echo ""
        
        echo "=== 사용할 시뮬레이터 결정 ==="
        # 사용 가능한 첫 번째 iPhone 시뮬레이터 찾기
        SIMULATOR=$(xcrun simctl list devices available | grep -E "iPhone.*(.*)" | head -1 | sed 's/^ *//' | cut -d'(' -f1 | sed 's/ *$//')
        echo "선택된 시뮬레이터: '$SIMULATOR'"
        
        # 환경 변수로 저장
        echo "SIMULATOR_NAME=$SIMULATOR" >> $GITHUB_ENV
      
    # 3단계: 프로젝트 정보 확인
    - name: 📋 Weather 프로젝트 스킴 확인
      run: |
        echo "=== Weather.xcodeproj 스킴 정보 ==="
        xcodebuild -list -project Weather.xcodeproj
    
    # 4단계: 의존성 확인
    - name: 📦 의존성 확인
      run: |
        if [ -f "Podfile" ]; then
          echo "Podfile 발견! CocoaPods 설치 중..."
          sudo gem install cocoapods
          pod install
        else
          echo "Podfile 없음 - 순수 iOS 프로젝트입니다 ✅"
        fi
    
    # 5단계: 시뮬레이터 방식으로 빌드 시도
    - name: 🔨 Weather 앱 빌드하기 (시뮬레이터)
      run: |
        echo "=== ⚡ Weather 앱 빌드 시작! ==="
        echo "사용할 시뮬레이터: $SIMULATOR_NAME"
        
        # 시뮬레이터 이름이 있으면 사용, 없으면 일반적인 방법 사용
        if [ -n "$SIMULATOR_NAME" ] && [ "$SIMULATOR_NAME" != "" ]; then
          echo "특정 시뮬레이터로 빌드 시도..."
          xcodebuild build             -project Weather.xcodeproj             -scheme Weather             -destination "platform=iOS Simulator,name=$SIMULATOR_NAME"             -configuration Debug             CODE_SIGN_IDENTITY=""             CODE_SIGNING_REQUIRED=NO             ONLY_ACTIVE_ARCH=NO
        else
          echo "일반 시뮬레이터로 빌드 시도..."
          xcodebuild build             -project Weather.xcodeproj             -scheme Weather             -destination "generic/platform=iOS Simulator"             -configuration Debug             CODE_SIGN_IDENTITY=""             CODE_SIGNING_REQUIRED=NO             ONLY_ACTIVE_ARCH=NO
        fi
        
        echo "=== ✅ 빌드 성공! ==="
    
    # 6단계: 혹시 위가 실패하면 더 안전한 방법으로 시도
    - name: 🔄 대안 빌드 방식 (위가 실패한 경우)
      if: failure()
      run: |
        echo "=== 🔄 대안 방식으로 빌드 재시도 ==="
        
        # 가장 안전한 방법: 아무 destination 없이
        echo "방법 1: destination 없이 빌드"
        xcodebuild build           -project Weather.xcodeproj           -scheme Weather           -configuration Debug           CODE_SIGN_IDENTITY=""           CODE_SIGNING_REQUIRED=NO || echo "방법 1 실패"
        
        echo ""
        echo "방법 2: macOS용으로 빌드 (가능한 경우)"
        xcodebuild build           -project Weather.xcodeproj           -scheme Weather           -destination "platform=macOS"           -configuration Debug           CODE_SIGN_IDENTITY=""           CODE_SIGNING_REQUIRED=NO || echo "방법 2 실패 (정상)"
    
    # 7단계: 성공 메시지!
    - name: 🎉 완료!
      run: |
        echo "🎉🎉🎉 축하합니다! 🎉🎉🎉"
        echo ""
        echo "✅ Weather 앱이 성공적으로 빌드되었습니다!"
        echo "✅ 코드에 컴파일 에러가 없습니다!"
        echo "✅ 프로젝트 설정이 올바릅니다!"
        echo ""
        echo "사용된 시뮬레이터: $SIMULATOR_NAME"
        echo "이제 진짜 iOS 개발자처럼 CI/CD를 사용하고 있어요! 🚀"